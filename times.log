numPy:
Training inputs: [[0 0 1]
 [1 1 1]
 [1 0 1]
 [0 1 1]]
Training outputs: [[0]
 [1]
 [1]
 [0]]
Random starting synaptic weights: [[-0.0386954 ]
 [ 0.48033408]
 [-0.83793706]]
Synaptic weights after training: [[10.38041812]
 [-0.20642924]
 [-4.98451562]]
Outputs after training [[0.00679675]
 [0.99445582]
 [0.99548523]
 [0.00553607]]
Output for novel input: [ 1,0,0 ] =>  [0.99996897]
real 0.27
user 0.25
sys 0.01

GHC:
Training inputs:
[[0.0,0.0,1.0],[1.0,1.0,1.0],[1.0,0.0,1.0],[0.0,1.0,1.0]]

Training outputs:
[[0.0],[1.0],[1.0],[0.0]]

Random starting synaptic weights:
[[0.7480211],[0.16873276],[0.4314903]]

Weights after training: [[10.380407],[-0.20672989],[-4.9843397]]

Output  after training: [[6.7979405e-3],[0.99445504],[0.99548596],[5.5353795e-3]]

New Input and Output with trained weights:[[1.0,0.0,0.0]]=>[[0.999969]]
real 0.21
user 0.17
sys 0.03

Racket:

Training inputs:
#<array #(4 3) #[0 0 1 1 1 1 1 0 1 0 1 1]>

Training outputs:
#<array #(4 1) #[0 1 1 0]>

Random starting synaptic weights:
#<array #(3 1) #[0.7915535091057257 0.5411724668377715 -0.9888756218566861]>

Synaptic weights after training:
#<array #(3 1) #[10.380604658188576 -0.2063188507800428 -4.984674802476598]>

Outputs after training:
#<array #(4 1) #[0.006795679853612847 0.9944565842310985 0.995485357899573 0.005535798711692154]>

Output for novel input: [1 0 0 ] => 
#<array #(1 1) #[0.9999689724700973]>
real 10.12
user 9.97
sys 0.16

Typed Racket:

Training inputs:
#<array #(4 3) #[0.0 0.0 1.0 1.0 1.0 1.0 1.0 0.0 1.0 0.0 1.0 1.0]>

Training outputs:
#<array #(4 1) #[0 1 1 0]>

Random starting synaptic weights:
#<array #(3 1) #[-0.40734493656264303 0.4506269678777106 0.19142136066584925]>

Synaptic weights after training:
#<array #(3 1) #[-0.40734493656264303 0.4506269678777106 0.19142136066584925]>

Outputs after training:
#<array #(4 1) #[0.006798210148833632 0.9944548422706065 0.9954853026318226 0.005536190541427262]>

Output for novel input: [1 0 0 ] => 
#<array #(1 1) #[0.9999689588786168]>
real 2.36
user 1.96
sys 0.40

Octave:
training_inputs =

   0   0   1
   1   1   1
   1   0   1
   0   1   1

training_outputs =

   0
   1
   1
   0

synaptic_weights =

   0.50691
  -0.56855
  -0.40023

--
After training...
synaptic_weights =

   10.38050
   -0.20680
   -4.98433

output =

   0.0067980
   0.9944552
   0.9954864
   0.0055350

Output for novel input: [1 0 0 ] =>  0.99997
real 0.54
user 0.53
sys 0.00

Julia:
Training inputs
4Ã—3 Array{Int64,2}:
 0  0  1
 1  1  1
 1  0  1
 0  1  1
Training Outputs
4-element Array{Int64,1}:
 0
 1
 1
 0
Initial random weights
3-element Array{Float64,1}:
 0.006733200635470116
 0.6363656049094901  
 0.03637734805294812 
--

Weights after training: 
3-element Array{Float64,1}:
 14.815809694495575 
 -0.3757395720934259
 -9.50642111306867  

Outputs after training
4-element Array{Float64,1}:
 7.437093384927156e-5 
 0.992851111167401    
 0.995079259582772    
 5.1077744936935026e-5

Outputs for novel(untrained) case
[0.9999996322307239]
real 1.55
user 1.46
sys 0.05

Node.js:
training inputs: [ [ 0, 0, 1 ], [ 1, 1, 1 ], [ 1, 0, 1 ], [ 0, 1, 1 ] ]
training outputs [ [ 0 ], [ 1 ], [ 1 ], [ 0 ] ]
[
  [ -0.013225335350303125 ],
  [ 0.9850237369463599 ],
  [ 0.7235000664353111 ]
]
Percetpron out:  [
  [ 0.006798004800176824 ],
  [ 0.9944549322140872 ],
  [ 0.9954850469172988 ],
  [ 0.0055364261450098155 ]
]

Final weights:  [
  [ 10.380191082474559 ],
  [ -0.2065492775438679 ],
  [ -4.984330416084992 ]
]
Output from novel input [1 0 0 ] =>  [ [ 0.9999689596356092 ] ]
real 0.68
user 0.94
sys 0.06

CSC Chicken:

training-inputs: #(#(0 0 1) #(1 1 1) #(1 0 1) #(0 1 1))
training-outputs: #(#(0) #(1) #(1) #(0))
synaptic-weights: #(#(0.734223610423159) #(0.287646347384537) #(0.857402537562821))

Output:#(#(0) #(0) #(0) #(0))

Weights after training: #(#(0.734223610423159) #(0.287646347384537) #(0.857402537562821))

Output for novel input: [1 0 0 ] => #(#(0))
real 0.42
user 0.42
sys 0.00

CSI Chicken:

training-inputs: #(#(0 0 1) #(1 1 1) #(1 0 1) #(0 1 1))
training-outputs: #(#(0) #(1) #(1) #(0))
synaptic-weights: #(#(0.734223610423159) #(0.287646347384537) #(0.857402537562821))

Output:#(#(0.00778174192506385) #(0.99995811485298) #(0.999965246234531) #(0.00646533981817332))

Weights after training: #(#(15.1153507689821) #(-0.186650484385636) #(-4.84816289035308))

Output for novel input: [1 0 0 ] => #(#(0.99999972742473))
real 0.79
user 0.79
sys 0.00

